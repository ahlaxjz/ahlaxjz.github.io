<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>夏家铸的个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-20T13:34:13.005Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>夏家铸</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>损失函数</title>
    <link href="http://yoursite.com/2018/07/20/LossFunction/"/>
    <id>http://yoursite.com/2018/07/20/LossFunction/</id>
    <published>2018-07-20T12:01:04.000Z</published>
    <updated>2018-07-20T13:34:13.005Z</updated>
    
    <content type="html"><![CDATA[<p>在统计学，统计决策理论和经济学中，损失函数是指一种将一个事件（在一个样本空间中的一个元素）映射到一个表达与其事件相关的经济成本或机会成本的实数上的一种函数。更通俗地说，在统计学中损失函数是一种衡量损失和错误（这种损失与“错误地”估计有关，如费用或者设备的损失）程度的函数。</p><a id="more"></a><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>一、 0-1损失函数<br>二、 平方损失函数（Square Loss）：主要是最小二乘法（OLS）中<br>三、 绝对值损失函数<br>四、 对数损失函数（Cross Entropy Loss，Softmax Loss ）：用于Logistic 回归与Softmax 分类中<br>五、 指数损失函数（Exponential Loss） ：主要用于Adaboost 集成学习算法中<br>六、 铰链损失函数（Hinge Loss）：主要用于支持向量机（SVM） 中</p><h2 id="0-1损失函数"><a href="#0-1损失函数" class="headerlink" title="0-1损失函数"></a>0-1损失函数</h2><p>可以看出，该损失函数的意义就是，当预测错误时，损失函数值为1，预测正确时，损失函数值为0。该损失函数不考虑预测值和真实值的误差程度，也就是只要预测错误，预测错误差一点和差很多是一样的。</p><h2 id="平方损失函数"><a href="#平方损失函数" class="headerlink" title="平方损失函数"></a>平方损失函数</h2><p>该损失函数的意义也很简单，就是取预测差距的平方。</p><h2 id="绝对值损失函数"><a href="#绝对值损失函数" class="headerlink" title="绝对值损失函数"></a>绝对值损失函数</h2><p>该损失函数的意义和上面差不多，只不过是取了绝对值，差距不会被平方缩放。</p><h2 id="对数损失函数"><a href="#对数损失函数" class="headerlink" title="对数损失函数"></a>对数损失函数</h2><p>这个损失函数就比较难理解了。事实上，该损失函数用到了极大似然估计的思想。P(Y|X)通俗的解释就是：在当前模型的基础上，对于样本X，其预测值为Y，也就是预测正确的概率。由于概率之间的同时满足需要使用乘法，为了将其转化为加法，我们将其取对数。最后由于是损失函数，所以预测正确的概率越高，其损失值应该是越小，因此再加个负号取个反。</p><p>经典的对数损失函数包括entropy和softmax，这里以entropy为例<br>在逻辑回归中，我们采用的是对数损失函数。由于逻辑回归是服从伯努利分布(0-1分布)的，并且逻辑回归返回的sigmoid值是处于(0,1)区间，不会取到0,1两个端点。因此我们能够将其损失函数写成以下形式： </p><p>解释一下含义：</p><ul><li>当真实值y=1时，，当预测值越接近1，也越接近最大值1，加上负号后就代表误差值最小。而当预测值越接近0，越接近负无穷，加上负号后就代表误差值最大。</li><li><p>当真实值y=0时，，当预测值越接近0，也越接近最大值1，加上负号后就代表误差值最小。而当预测值越接近1，越接近负无穷，加上负号后就代表误差值最大。<br>最后逻辑回归中对于所有样本的损失函数为： </p><p>$$ L(Y,P(Y|X))=−logP(Y|X) $$</p></li></ul><h2 id="指数损失函数"><a href="#指数损失函数" class="headerlink" title="指数损失函数"></a>指数损失函数</h2><p>指数误差，在boosting算法中比较常见:<br>学过Adaboost算法的人都知道，它是前向分步加法算法的特例，是一个加和模型，损失函数就是指数函数。在Adaboost中，经过m此迭代之后，可以得到</p><p><img src="/images/eq1.gif" alt=""></p><p>Adaboost每次迭代时的目的是为了找到最小化下列式子时的参数<br><img src="/images/eq2.gif" alt="">    </p><p>而指数损失函数(exp-loss）的标准形式如下</p><p><img src="/images/eq3.gif" alt=""></p><p>可以看出，Adaboost的目标式子就是指数损失，在给定n个样本的情况下，Adaboost的损失函数为：</p><p><img src="/images/eq4.gif" alt=""></p><h2 id="hinge-loss损失函数"><a href="#hinge-loss损失函数" class="headerlink" title="hinge loss损失函数"></a>hinge loss损失函数</h2><p>hinge损失函数和SVM是息息相关的。在线性支持向量机中，最优化问题可以等价于下列式子：<br><img src="/images/eq5.gif" alt=""><br>下面来对式子做个变形，令：<br><img src="/images/eq6.gif" alt=""><br>于是，原式就变成了：<br><img src="/images/eq7.gif" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在统计学，统计决策理论和经济学中，损失函数是指一种将一个事件（在一个样本空间中的一个元素）映射到一个表达与其事件相关的经济成本或机会成本的实数上的一种函数。更通俗地说，在统计学中损失函数是一种衡量损失和错误（这种损失与“错误地”估计有关，如费用或者设备的损失）程度的函数。&lt;/p&gt;
    
    </summary>
    
      <category term="统计学习" scheme="http://yoursite.com/categories/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Matlab基本语法</title>
    <link href="http://yoursite.com/2018/07/19/matlab/"/>
    <id>http://yoursite.com/2018/07/19/matlab/</id>
    <published>2018-07-19T01:09:49.000Z</published>
    <updated>2018-07-20T06:23:52.936Z</updated>
    
    <content type="html"><![CDATA[<p>在做真值发现的研究中，获取了CRH的源码，不过是Matlab的，没接触过，只能从头学起。</p><a id="more"></a><h2 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h2><p>[]: 用来存储矩阵和向量。例如，a=[1,2,3]是一个向量，这个向量有3个元素，也可以用a=[1 2 3]。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a = [1, 2, 3]</span><br><span class="line">a = </span><br><span class="line">    1 2 3</span><br></pre></td></tr></table></figure></p><p>对于a=[1 2 3; 2 3 4; 3 4 5]，这是一个3*3的矩阵<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a=[1 2 3; 2 3 4; 3 4 5]</span><br><span class="line">a = </span><br><span class="line">123</span><br><span class="line">234</span><br><span class="line">345</span><br></pre></td></tr></table></figure></p><p>{}: 用于单元数组的分配和引用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a&#123;3,3&#125;= &apos;china&apos;</span><br><span class="line"></span><br><span class="line">a = </span><br><span class="line"></span><br><span class="line">    []    []         []</span><br><span class="line">    []    []         []</span><br><span class="line">    []    []    &apos;china&apos;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; c = cell(2, 5)</span><br><span class="line"></span><br><span class="line">c = </span><br><span class="line"></span><br><span class="line">    []    []    []    []    []</span><br><span class="line">    []    []    []    []    []</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> c = &#123;&apos;Red&apos;, &apos;Blue&apos;, &apos;Green&apos;, &apos;Yellow&apos;, &apos;White&apos;; 1 2 3 4 5&#125;</span><br><span class="line"></span><br><span class="line">c = </span><br><span class="line"></span><br><span class="line">    &apos;Red&apos;    &apos;Blue&apos;    &apos;Green&apos;    &apos;Yellow&apos;    &apos;White&apos;</span><br><span class="line">    [  1]    [   2]    [    3]    [     4]    [    5]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c(1:2,1:2)</span><br><span class="line"></span><br><span class="line">ans = </span><br><span class="line"></span><br><span class="line">    &apos;Red&apos;    &apos;Blue&apos;</span><br><span class="line">    [  1]    [   2]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; c = &#123; &apos;china&apos;, &apos;中国&apos;, [1 2 3 4]&#125;</span><br><span class="line"></span><br><span class="line">c = </span><br><span class="line"></span><br><span class="line">    &apos;china&apos;    &apos;中国&apos;    [1x4 double]</span><br></pre></td></tr></table></figure><p>(): 用于引用数组的元素。a=[1 2 2],则a(1,2)就是访问的a数组的第一行第2列元素，为2。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; clear all</span><br><span class="line">&gt;&gt; a = cell(2, 3)</span><br><span class="line"></span><br><span class="line">a = </span><br><span class="line"></span><br><span class="line">    []    []    []</span><br><span class="line">    []    []    []</span><br><span class="line"></span><br><span class="line">&gt;&gt; a&#123;1, 2&#125; = &apos;china&apos;</span><br><span class="line"></span><br><span class="line">a = </span><br><span class="line"></span><br><span class="line">    []    &apos;china&apos;    []</span><br><span class="line">    []         []    []</span><br><span class="line"></span><br><span class="line">&gt;&gt; a&#123;1, 3&#125; = [1 2 3; 2 3 4]</span><br><span class="line"></span><br><span class="line">a = </span><br><span class="line"></span><br><span class="line">    []    &apos;china&apos;    [2x3 double]</span><br><span class="line">    []         []              []</span><br><span class="line"></span><br><span class="line">&gt;&gt; b = a&#123;1, 3&#125;(1, 3)</span><br><span class="line"></span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">     3</span><br></pre></td></tr></table></figure></p><h2 id="MATLAB算术运算"><a href="#MATLAB算术运算" class="headerlink" title="MATLAB算术运算"></a>MATLAB算术运算</h2><p>MATLAB的算术运算有两种不同类型：1）矩阵算术运算；2）阵列算术运算。<br>MATLAB矩阵算术运算与线性代数中的定义相同：执行数组操作，无论是在一维和多维数组元素的元素。<br>矩阵运算符和数组运营商是有区别的句点（.）符号。然而，由于加法和减法运算矩阵和阵列是相同的，操作者这两种情况下是相同的。<br>下表给出了运算符的简要说明：</p><table><thead><tr><th style="text-align:center">操作符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">+</td><td style="text-align:center">加法或一元加号。A + B将A和B。 A和B必须具有相同的尺寸，除非一个人是一个标量。一个标量，可以被添加到任何大小的矩阵。</td></tr><tr><td style="text-align:center">-</td><td style="text-align:center">减法或一元减号。A - B，减去B从A和B必须具有相同的大小，除非是一个标量。可以从任意大小的矩阵中减去一个标量。</td></tr><tr><td style="text-align:center">*</td><td style="text-align:center">矩阵乘法；是一个更精确的矩阵A和B的线性代数积，矩阵乘法对于非纯量A和B，列一个数必须等于B.标量可以乘以一个任意大小的矩阵的行数。</td></tr><tr><td style="text-align:center">.*</td><td style="text-align:center">数组的乘法；A.*B是数组A和B的元素积，A和B必须具有相同的大小，除非A、B中有一个是标量。</td></tr><tr><td style="text-align:center">/</td><td style="text-align:center">斜线或矩阵右除法；B/A与B * inv（A）大致相同。更确切地说：B/A = (A’B’)’</td></tr><tr><td style="text-align:center">./</td><td style="text-align:center">矩阵右除法；矩阵A与矩阵B相应元素相除（A、B为同纬度的矩阵）</td></tr><tr><td style="text-align:center">.\</td><td style="text-align:center">反斜杠或矩阵左除；如果A是一个方阵，AB是大致相同的INV（A）<em> B，除非它是以不同的方式计算。如果A是一个n</em>n的矩阵，B是一个n组成的列向量，或是由若干这样的列的矩阵，则X = AB 是方程 AX = B ，如果A严重缩小或者几乎为单数，则显示警告消息。</td></tr><tr><td style="text-align:center">.</td><td style="text-align:center">数组左除法；A. B是元素B（i，j）/A（i，j）的矩阵。A和B必须具有相同的大小，除非其中一个是标量。</td></tr><tr><td style="text-align:center">^</td><td style="text-align:center">矩阵的幂。X^P是X到幂P，如果p是标量；如果p是一个整数，则通过重复平方计算功率。如果整数为负数，X首先反转。对P值的计算，涉及到特征值和特征向量，即如果[ D ] = V，EIG（x），那么X^P = V * D.^P / V。</td></tr><tr><td style="text-align:center">.^</td><td style="text-align:center">A.^B：A的每个元素的B次幂（A、B为同纬度的矩阵）</td></tr><tr><td style="text-align:center">‘</td><td style="text-align:center">矩阵的转置；A’是复数矩阵A的线性代数转置，这是复共轭转置。</td></tr><tr><td style="text-align:center">.’</td><td style="text-align:center">数组的转置；A’是数组A的转置，对于复数矩阵，这不涉及共轭。</td></tr></tbody></table><h2 id="unique函数的使用"><a href="#unique函数的使用" class="headerlink" title="unique函数的使用"></a>unique函数的使用</h2><p>参考链接：<a href="https://blog.csdn.net/sinat_40282753/article/details/78373532" target="_blank" rel="noopener">https://blog.csdn.net/sinat_40282753/article/details/78373532</a></p><h2 id="strcmp函数的使用"><a href="#strcmp函数的使用" class="headerlink" title="strcmp函数的使用"></a>strcmp函数的使用</h2><p>参考链接：<a href="https://blog.csdn.net/feitianziyouaoxiang/article/details/46492111" target="_blank" rel="noopener">https://blog.csdn.net/feitianziyouaoxiang/article/details/46492111</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在做真值发现的研究中，获取了CRH的源码，不过是Matlab的，没接触过，只能从头学起。&lt;/p&gt;
    
    </summary>
    
      <category term="编程语言" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="Matlab" scheme="http://yoursite.com/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>The First Blog</title>
    <link href="http://yoursite.com/2018/07/17/The-First-Blog/"/>
    <id>http://yoursite.com/2018/07/17/The-First-Blog/</id>
    <published>2018-07-17T09:59:51.000Z</published>
    <updated>2018-07-19T02:49:48.135Z</updated>
    
    <content type="html"><![CDATA[<p>  这是我的第一篇博客，就先写一下我的感受和想法。</p><a id="more"></a><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>  制作个人博客的目的是为了激励自己能在写博客的道路上一发不可收拾，哈哈，当然了，作为了学了五年计算机的，竟然还没写过blog，真的算是很丢人的了。所以，为了提高改进勉励自己，就是干！！！其实，最主要目的还是为了记录下在计算机道路上捡到的小石子，毕竟以前捡到的最后还是丢了。</p><h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><p>  开始爬山，好好努力，带上女朋友，一起加油！！！</p><h2 id="Hexo搭建"><a href="#Hexo搭建" class="headerlink" title="Hexo搭建"></a>Hexo搭建</h2><p>  参考 <a href="http://www.cnblogs.com/fengxiongZz/p/7707568.html" target="_blank" rel="noopener">http://www.cnblogs.com/fengxiongZz/p/7707568.html</a></p><h2 id="Next配置"><a href="#Next配置" class="headerlink" title="Next配置"></a>Next配置</h2><p>  参考<br>  [1] <a href="http://www.cnblogs.com/fengxiongZz/p/7707568.html" target="_blank" rel="noopener">http://www.cnblogs.com/fengxiongZz/p/7707568.html</a><br>  [2] <a href="http://www.cnblogs.com/fengxiongZz/p/7707219.html" target="_blank" rel="noopener">http://www.cnblogs.com/fengxiongZz/p/7707219.html</a><br>  [3] <a href="https://blog.csdn.net/mynamelijun/article/details/52196184" target="_blank" rel="noopener">https://blog.csdn.net/mynamelijun/article/details/52196184</a></p><h2 id="博客书写"><a href="#博客书写" class="headerlink" title="博客书写"></a>博客书写</h2><p>  参考 <a href="https://www.jianshu.com/p/56d99a3049a5" target="_blank" rel="noopener">https://www.jianshu.com/p/56d99a3049a5</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>  其实，告诉大家一个秘密，我的界面还没优化好呢！哈哈哈，不多说了，开始优化了，优化好后开始好好看论文，好好搞学术，加油！！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  这是我的第一篇博客，就先写一下我的感受和想法。&lt;/p&gt;
    
    </summary>
    
      <category term="杂记" scheme="http://yoursite.com/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="心情" scheme="http://yoursite.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
</feed>
